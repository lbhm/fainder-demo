[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "backend"
dynamic = ["version"]
description = "A search engine for text and distribution-aware dataset search."
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
authors = [
    { name = "Lennart Behme", email = "lennart.behme@tu-berlin.de" },
    { name = "Leonard Gei√üler", email = "l.geissler@tu-berlin.de" },
]
keywords = [
    "data discovery",
    "dataset search",
    "distribution-aware",
    "percentile predicate",
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fainder@git+https://github.com/lbhm/fainder@demo",
    "fastapi[standard]~=0.115.6",
    "grpcio~=1.69",
    "grpcio-tools~=1.69",
    "hnswlib~=0.8.0",
    "lark~=1.2",
    "loguru~=0.7.3",
    "mypy-protobuf~=3.6",
    "numpy~=2.0",
    "protobuf~=5.29",
    "pydantic~=2.10",
    "pydantic-settings~=2.7",
    "sentence-transformers~=3.3",
    "torch~=2.0",
]

[project.optional-dependencies]
dev = [
    "grpc-stubs~=1.53",
    "mypy~=1.13",
    "pre-commit~=4.0",
    "pytest~=8.3",
    "pytest-cov~=6.0.0",
    "types-protobuf~=5.29",
]

[project.urls]
Repository = "https://github.com/lbhm/fainder-demo"

[tool.hatch.version]
path = "backend/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 99
target-version = "py311"
exclude = ["proto"]

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C90",  # mccabe
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "FAST", # FastAPI rules
    "I",    # isort
    "ISC",  # flake8-implicit-str-concat
    "N",    # pep8-naming
    "NPY",  # Numpy checks
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RUF",  # ruff-specific rules
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "TC",   # flake8-typing-checking
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]
ignore = [
    "D",    # pydocstyle
    "PLR",  # pylint refactoring
    "S101", # assert (needed for pytest)
]

[[tool.uv.index]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch" }

[tool.mypy]
ignore_missing_imports = true
plugins = ["numpy.typing.mypy_plugin"]
strict = true
warn_unused_ignores = false
files = ["backend", "tests"]
